<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"       
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">
	
	<!-- import registry  ,if choose db,, need db script init
	<import resource="../../sso-plugin/sso-plugin-registry-db.xml"/>
	<import resource="../../sso-plugin/sso-plugin-registry.xml"/>
	-->
	<import resource="../../sso-plugin/sso-plugin-registry.xml"/>
	
	<!-- import log plugin , need db script init 
		<import resource="../../sso-plugin/sso-plugin-log.xml"/>
		loginHandlers and loginImmediateHandlers config(place on the last handler):
		<ref bean="dbLogLoginHandler"/>
		logoutHandlers config(place on the last handler):
		<ref bean="dbLogLogoutHandler"/>
	-->

	<!-- import authentication plugin -->
	<import resource="sso-plugin-ntlm.xml"/>
	
	<!-- single sign on config -->
    <bean id="singleSignOnConfig" class="bingo.sso.server.SingleSignOnConfig">
        <property name="gateway"                value="${sso.gateway}"/>
        <property name="gatewayLoginUrl"        value="${sso.gateway.loginUrl}"/>
        <property name="gatewayPublicKeyBase64" value="${sso.gateway.publicKey}"/>    
        <property name="apPulicKey">
        	<map>
        		<entry key="test_app" value="${sso.ap.publicKey.test_app}"/>
        		<entry key="test_app2" value="${sso.ap.publicKey.test_app2}"/>
        	</map>
        </property>
    </bean>
    
	<!-- 用户身份验证器实现类列表，在部署时请修改为与项目环境一致的验证方式，如数据库验证，LDAP验证  -->
	<util:list id="authenticationHandlers">
	</util:list>
	
	<!-- 实现 bingo.sso.server.cas.auth.IPrincipalValidator 接口 -->
	<util:list id="principalValidators">
	</util:list>
    
    <!-- 应用是否受权检查器，如果存在多个检查器，只要有一个检查通过，则有权限访问SSO -->
	<util:list id="serverAuthCheckers">
	</util:list>
	
	<!-- 登录流程的处理链配置 -->
	<util:list id="loginHandlers">
		<ref bean="casTicketCookieRetrievingHandler"/>
		<ref bean="windowsNTLMLoginHandler"/> 
		<ref bean="casTrustedCredentialsHandler"/>
		<ref bean="openIdLoginHandler"/> 
		<ref bean="casServiceCheckingHandler"/>
		<!--
		<ref bean="casLoginFormViewHandler"/>
		<ref bean="casLoginFormAuthenticateHandler"/>
		-->
		<ref bean="casTicketCookieWritingHandler"/>
		<ref bean="casServiceGrantingHandler"/>
		<ref bean="casLoginSuccessHandler"/>
	</util:list>
	
	<!-- 登录流程(不交互)的处理链配置 -->
	<util:list id="loginImmediateHandlers">
		<ref bean="casTicketCookieRetrievingHandler"/>
		<ref bean="casTrustedCredentialsHandler"/>
		<ref bean="casServiceCheckingHandler"/>
		<ref bean="casServiceGrantingHandler"/>
		<ref bean="casLoginImmediateResponseHandler"/>
	</util:list>
    
	<!-- 注销流程的处理链配置 -->
	<util:list id="logoutHandlers">
		<!-- add your handlers here bofore logout from sso -->
    
		<ref bean="casTicketGrantingTicketDestroyHandler"/>
		<ref bean="sessionInvalidateLogoutHandler"/>
		<ref bean="authorizationHeaderLogoutHandler"/>
        
		<!-- add your handlers here after logout from sso -->
        
		<ref bean="casServiceLogoutHandler"/>
	</util:list>
	
	<!-- 防钓鱼的问题
	        <value>http://localhost:8080/sso_app/openid</value>
        	<value>http://127.0.0.1:8080/sso_app/openid</value>
	 -->
	<util:list id="ssoClientUrls">
	</util:list>
</beans>